<Project Sdk="Microsoft.VisualStudio.JavaScript.Sdk/0.5.271090-alpha">
  <PropertyGroup>
    <ShouldRunNpmInstall>false</ShouldRunNpmInstall>
    <BuildCommand>pnpm build</BuildCommand>
    <ProductionBuildCommand>pnpm build</ProductionBuildCommand>
    <StartupCommand>pnpm dev</StartupCommand>
  </PropertyGroup>

  <Target Name="RestoreNpm" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <PackageJsons Include="package.json" />
    </ItemGroup>

    <!-- Install npm packages from lockfile if node_modules is missing and lockfile is present -->
    <Message Importance="Normal" Text="Installing npm packages for %(PackageJsons.RelativeDir) from lockfile"
             Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules') And Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/pnpm-lock.yaml')" />
    <Exec Command="pnpm install --frozen-lockfile" WorkingDirectory="%(PackageJsons.RootDir)%(PackageJsons.Directory)"
          Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules') And Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/pnpm-lock.yaml')" />

    <!-- Install npm packages from scratch if node_modules is missing and lockfile is not present -->
    <Message Importance="Normal" Text="Installing npm packages for %(PackageJsons.RelativeDir) from scratch"
             Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules') And !Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/pnpm-lock.yaml')" />
    <Exec Command="pnpm install" WorkingDirectory="%(PackageJsons.RootDir)%(PackageJsons.Directory)"
          Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules') And !Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/pnpm-lock.yaml')" />
  </Target>
</Project>
